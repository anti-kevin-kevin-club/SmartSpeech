{
  "name": "pptx-compose",
  "version": "0.4.0",
  "description": "PPTX parser to JSON",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter list --growl"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shobhitsharma/pptx-compose.git"
  },
  "keywords": [
    "pptx",
    "pptx-composer",
    "pptx-json",
    "pptx-xml",
    "ppt",
    "pptx-to-json",
    "pptx-to-xml"
  ],
  "author": {
    "name": "Shobhit Sharma",
    "email": "ishobhitsharma@gmail.com",
    "url": "https://shobh.it/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/shobhitsharma/pptx-compose/issues"
  },
  "homepage": "https://github.com/shobhitsharma/pptx-compose#readme",
  "dependencies": {
    "async": "^2.5.0",
    "commander": "2.11.0",
    "jszip": "^3.1.3",
    "xml2js": "^0.4.18"
  },
  "devDependencies": {
    "mocha": "^3.5.0"
  },
  "readme": "# pptx-compose [![Build Status](https://travis-ci.org/shobhitsharma/pptx-compose.svg?branch=master)](https://travis-ci.org/shobhitsharma/pptx-compose)\n\n> Parses Open Office XML generated PPTX to JSON\n\n\n## Install\n\n```\n$ npm install pptx-compose\n```\n\n## Usage\n\n```js\nconst composer = require('pptx-compose');\n\n// Parses a PPTX file\ncomposer.parse('/path/to/pptx/file.pptx', (err, content)=>{})\n```\n\n## CLI\n\nComposer is able to generate JSON from PPTX source and saves result to `./output` directory, run:\n\n```bash\n$ node bin/convert ./path/to/my/pptx\n```\n\n## Methods\n\nPPTX Composer has following built-in methods:\n\n### .parse()\n\nParse a single PPTX file.\n\n```js\ncomposer.parse('/path/to/pptx/file.pptx', function (err, json) {\n  console.log(JSON.stringify(json, null, 2));\n});\n```\n\n### .bufferize()\n\nConverts generated JSON (via parse method) into buffer or file. The data array can be manipulated based on your requirements in case you need to add theme, slides or other xml data.\n\n```js\nvar parsed_xmls = [xml1, xml2, xml3];\nvar options = {\n  file: true // Returns a PPTX file. (`false` as default to return buffer)\n};\n\ncomposer.bufferize(parsed_xmls, options, (err, data)=>{});\n```\n\n### .execute()\n\nExecutes parsing of multiple PPTX files and returning results as array.\n\n```js\nvar files = [\n  '/path/to/pptx/file1.pptx',\n  '/path/to/pptx/file2.pptx'\n];\n\ncomposer.execute(files, function (err, results) {\n  console.log(results);\n});\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "pptx-compose@0.4.0",
  "_from": "pptx-compose@"
}
